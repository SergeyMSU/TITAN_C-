#pragma once

class Yzel;
class Luch;
class Cell;

const double const_pi = 3.14159265358979323846;

#define kv(x) ((x) * (x))

#include <iostream>
#include <vector>
#include <algorithm>

struct Geo_param {
    double phi = 0.0;
    double tetta0 = 0.0;   // От какого угла строится сетка
    double tetta1 = 0.0;   // До какого угла строится сетка
    double tetta2 = 0.0;   // Угол до тройной точки

    int N1 = 0;   // Число А - направляющих
    int N2 = 0;   // Число B - направляющих
    int N3 = 0;   // Число C - направляющих
    int N4 = 0;   // Число D - направляющих в подвижной зоне + 3 (сдвиг из-за других направляющих)
    int N5 = 0;   // Число D - направляющих (в неподвижной зоне, левее L6)


    int M0 = 0;   // Число неподвижных точек вблизи солнца от R0 включительно до R1 не включительно (точка на сфере R1 не считается здесь)
    int M1 = 0;   // Число точек на А-направляющих от M0 до ударной волны (точка на ударной волне не считается здесь)
    int M11 = 0;   // сколько точек после ударной волны имеют радиальное направление (это не дополнительные точки)
    int M2 = 0;   // > 6  Число точек на А-направляющих во внутреннем ударном слое (точка на контакте не считается здесь)
    int M3 = 0;   // Число точек на А-направляющих во внешнем ударном слое (точка на внешней ударной волне не считается здесь)
    int M4 = 0;   // Число точек на А-направляющих в ЛИСМе
    int MF = 0;   // < M2  На какой высоте F - лучь

    double R0;    // Выколотая внутренняя сфера
    double R1;    // Сфера неподвижных точек

    double R2;    // TS (для начального построения сетки)
    double R3;    // HP (для начального построения сетки)
    double R4;    // BS (для начального построения сетки)
    double R5;    // Конец сетки
    double L6;    // Конец подвижной сетки слева
    double L7;    // Конец всей сетки слева


    // Следующие величины подбираются автоматически
    double dd1 = 1.0;   // Начальная длина вектора у G-лучей
    double dd2 = 1.0;   // Конечный вектор у G-лучей

    double dd3 = 1.0;   // Начальный вектор у B-лучей рядом с А-лучами
    double dd4 = 1.0;   // Конечный вектор у B-лучей рядом с А-лучами

    double dd5 = 1.0;   // Начальный вектор у С-лучей
    double dd6 = 1.0;   // Конечный вектор у С-лучей

    double dd7 = 1.0;   // Начальный вектор у H-лучей
    double dd8 = 1.0;   // Конечный вектор у H-лучей
};



#include "Help_funk.h"
#include "Luch.h"
#include "Yzel.h"
#include "Cell.h"
#include "Setka.h"